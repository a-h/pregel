# Define the interfaces.
type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Node {
  id: ID!
  parents(first: Int!, after: String): Connection
  children(first: Int!, after: String): Connection
}

type Connection {
  edges: [Edge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type Edge {
  cursor: String!
  node: Node
}

# Define queries and mutations.
type Query {
  get(id: ID!): Node
}

input NewNode {
  id: ID!
  parents: [ID!]
  children: [ID!]
}

input NewEdge {
  parent: ID! 
  child: ID!
}

type Mutation {
  createNode(node: NewNode!): ID!
  createEdge(edge: NewEdge!): ID!
}